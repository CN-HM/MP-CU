"use strict";(self.webpackChunkMP_CU_Doc=self.webpackChunkMP_CU_Doc||[]).push([[951],{5246:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-61d26846",path:"/component/toast.html",title:"轻提示",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"Toast",slug:"toast",children:[{level:3,title:"状态框",slug:"状态框",children:[]},{level:3,title:"加载框",slug:"加载框",children:[]}]},{level:2,title:"Tips参数",slug:"tips参数",children:[]},{level:2,title:"Toast 方法",slug:"toast-方法",children:[]}],filePathRelative:"component/toast.md",git:{updatedTime:1640013459e3}}},7107:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h1 id="轻提示" tabindex="-1"><a class="header-anchor" href="#轻提示" aria-hidden="true">#</a> 轻提示</h1><p>sys组件内置了，一般不需要再次挂载该组件。</p><h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips" aria-hidden="true">#</a> Tips</h2><p><img src="/images/toast/toast-1.png" alt="mp-cu"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//普通，默认1500毫秒关闭</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$tips</span><span class="token punctuation">(</span><span class="token string">&#39;你好呀&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//倒计时关闭</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$tips</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    title <span class="token operator">:</span><span class="token string">&#39;您好呀！&#39;</span><span class="token punctuation">,</span>\n    duration <span class="token operator">:</span> <span class="token number">5000</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//多内容</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$tips</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    title <span class="token operator">:</span> <span class="token string">&#39;Android Studio1.4 \\r\\n以后官方重做了新建Activity的模板展现, 其中默认的那一个, 就很好的演示了新系统的一些交互逻辑, 点击FAB的时候, 会从底部滑出来一个SnackBar, 其中默认的那一个, 就很好的演示了新系统的一些交互逻辑, 点击FAB的时候, 会从底部滑出来一个SnackBar, 不妨新建一个默认的体验一下官方的设计思想.适用于只是告诉用户发生了什么, 常见于系统的通知, 但是有很大的局限性,就是只能通知用户, 而做不到和用户进行交互, 比如你不小心删除了一张照片而没有通过二次确认, 仅仅是toast通知你&quot;已删除&quot;, 对用户而言是很难接受的事情.&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="toast" tabindex="-1"><a class="header-anchor" href="#toast" aria-hidden="true">#</a> Toast</h2><h3 id="状态框" tabindex="-1"><a class="header-anchor" href="#状态框" aria-hidden="true">#</a> 状态框</h3><p><img src="/images/toast/toast-2.png" alt="mp-cu"></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ui-btn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ui-btn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$error<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Error<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="加载框" tabindex="-1"><a class="header-anchor" href="#加载框" aria-hidden="true">#</a> 加载框</h3><p><img src="/images/toast/toast-3.png" alt="mp-cu"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Loading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">//显示加载框</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$loading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token comment">//倒计时关闭加载</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="tips参数" tabindex="-1"><a class="header-anchor" href="#tips参数" aria-hidden="true">#</a> Tips参数</h2><p>可以使用 <code>this.$tips(&#39;你好呀&#39;);</code> 和 <code>this.$tips({..});</code> 的方式，下文为 object 方式的参数说明。</p><table><thead><tr><th>参数</th><th>类型</th><th>可选值</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>String</td><td>-</td><td>-</td><td>标题</td></tr><tr><td>duration</td><td>Number</td><td>-</td><td>1500</td><td>关闭倒计时</td></tr><tr><td>icon</td><td>String</td><td>-</td><td>-</td><td>图标</td></tr><tr><td>mask</td><td>Boolean/String</td><td>false,true,80,20,40</td><td>false</td><td>遮罩</td></tr><tr><td>success</td><td>Event</td><td>-</td><td>res</td><td>事件</td></tr></tbody></table><h2 id="toast-方法" tabindex="-1"><a class="header-anchor" href="#toast-方法" aria-hidden="true">#</a> Toast 方法</h2><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>$success</td><td>成功提示框</td></tr><tr><td>$error</td><td>错误提示框</td></tr><tr><td>$loading</td><td>加载框</td></tr><tr><td>$hideLoading</td><td>关闭加载框</td></tr></tbody></table>',17),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);